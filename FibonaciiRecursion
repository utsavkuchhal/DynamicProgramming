import java.util.Arrays;

public class FibonaciiRecursion {

	static int[] arr  = new int[100];
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println(fibonacci(7));
		Arrays.fill(arr, -1);
		System.out.println(fibonacciMemo(7));
		System.out.println(fibonacciTopDown(7));
	}

	public static int fibonacci(int n)
	{
		if(n == 0 || n == 1)
			return n;
		
		return fibonacci(n - 1) + fibonacci(n - 2);
	}
	
	public static int fibonacciMemo(int n)
	{
		if(n == 0 || n == 1)
			return n;
		if(arr[n] != -1)
			return arr[n];
		
		return arr[n] = fibonacci(n -  1) + fibonacci(n  -2);
	}
	
	public static int fibonacciTopDown(int n)
	{
		int[] dp = new int[n + 1];
		dp[0] = 0;
		dp[1] = 1;
		
		for(int i = 2; i <dp.length; i++)
		{
			dp[i] = dp[i - 1] + dp[i - 2];
		}
		
		return dp[n];
	}

}
